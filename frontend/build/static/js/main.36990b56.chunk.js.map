{"version":3,"sources":["components/SearchBox.js","actions/userActions.js","constants/userConstants.js","components/Header.js","constants/orderConstants.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","constants/productContstants.js","components/Loader.js","components/Message.js","components/Paginate.js","components/Meta.js","components/ProductCarousel.js","Pages/HomePage.js","Pages/ProductPage.js","actions/cartActions.js","constants/cartConstants.js","Pages/CartPage.js","components/FormContainer.js","Pages/LoginPage.js","Pages/RegisterPage.js","Pages/ProfilePage.js","actions/orderActions.js","components/CheckoutSteps.js","Pages/ShippingPage.js","Pages/PaymentPage.js","Pages/PlaceOrderPage.js","Pages/OrderPage.js","Pages/UserListPage.js","Pages/UserEditPage.js","Pages/ProductListPage.js","Pages/ProductEditPage.js","Pages/OrderListPage.js","App.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","serviceWorker.js","index.js"],"names":["SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","type","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","product","_id","image","price","rating","numReviews","Card","Img","src","Body","Title","as","Text","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","page","pages","Pagination","Array","keys","map","x","key","active","Meta","description","keywords","Helmet","content","ProductCarousel","productTopRated","loading","error","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomePage","match","params","productList","sm","md","lg","xl","ProductPage","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","errorProductReview","successProductReview","success","alert","ListGroup","countInStock","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartPage","location","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginPage","email","setEmail","password","setPassword","redirect","login","RegisterPage","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfilePage","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","orders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingPage","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentPage","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderPage","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderPage","orderId","sdkReady","setSdkReady","orderDetails","orderPay","successPay","loadingPay","orderDeliver","successDeliver","loadingDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListPage","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditPage","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListPage","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditPage","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","console","updateProduct","File","custom","OrderListPage","orderList","App","path","component","exact","rootReducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.36990b56.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = e => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={e => setKeyword(e.target.value)}\n        placeholder='Search Products...'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LOGOUT,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\nimport axios from 'axios'\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const { data } = await axios.post(\n      '/api/users',\n      { email, password, name },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    })\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_LIST_RESET'\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap'\nimport SearchBox from '../components/SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Moonrise Media</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart' />\n                  Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user' />\n                    Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>\n            Copyright &copy; Moonrise Media LLC\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825'\n}\nRating.propTypes = {\n  value: PropTypes.number,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  const { _id, name, image, price, rating, numReviews } = product\n  return (\n    <>\n      <Card className='my-3 p-3 rounded'>\n        <Link to={`/product/${_id}`}>\n          <Card.Img src={image} variant='top' />\n        </Link>\n\n        <Card.Body>\n          <Link to={`/product/${_id}`}>\n            <Card.Title as='div'>\n              <strong>{name}</strong>\n            </Card.Title>\n          </Link>\n          <Card.Text as='div' className='my-3'>\n            <Rating value={rating} text={`${numReviews} reviews`} />\n          </Card.Text>\n          <Card.Text as='h3'>${price}</Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  )\n}\n\nexport default Product\n","import {\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS\n} from '../constants/productContstants'\nimport axios from 'axios'\n\nexport const listProducts = (\n  keyword = '',\n  pageNumber = ''\n) => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({ type: PRODUCT_DELETE_SUCCESS })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block'\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\nMessage.defaultProps = {\n  variant: 'info'\n}\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ page, pages, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map(x => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keywords' content={keywords} />\n    </Helmet>\n  )\n}\nMeta.defaultProps = {\n  title: 'Welcome to Moonrise Media',\n  description: 'We sell hard to find media at great prices',\n  keywords: 'oop, out of print, htf, hard to find, rare, DVD, Blu-Ray'\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector(state => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map(product => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Product from '../components/Product'\nimport { Row, Col } from 'react-bootstrap'\nimport { listProducts } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport Meta from '../components/Meta'\nimport ProductCarousel from '../components/ProductCarousel'\n\nconst HomePage = ({ match }) => {\n  const keyword = match.params.keyword\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map(product => (\n              <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomePage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport {\n  listProductDetails,\n  createProductReview\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productContstants'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Rating from '../components/Rating'\nimport Meta from '../components/Meta'\n\nconst ProductPage = ({ match, history }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate)\n  const {\n    error: errorProductReview,\n    success: successProductReview\n  } = productReviewCreate\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert('Review Submitted')\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>Price: {product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  ></Rating>\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0\n                          ? 'In Stock '\n                          : 'Out of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty:</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={e => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(x => (\n                              <option key={x + 1} value={x + 1}>\n                                {x + 1}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map(review => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={e => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={e => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type='submit' variant='primary'>\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review.\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductPage\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  })\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  })\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  })\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  })\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport { Row, Col, Button, ListGroup, Form, Card, Image } from 'react-bootstrap'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nexport const CartPage = ({ match, location, history }) => {\n  const productId = match.params.id\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, match, productId, qty])\n\n  const removeFromCartHandler = id => {\n    dispatch(removeFromCart(id))\n  }\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your Cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map(item => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>}\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={e =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map(x => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                SubTotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed to Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\nexport default CartPage\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nconst LoginPage = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n  const userLogin = useSelector(state => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterPage = ({ history, location }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n  const userRegister = useSelector(state => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {message && <Message variant='danger'>{message}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Name'\n            value={name}\n            onChange={e => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={e => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nconst ProfilePage = ({ history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { loading, error, user } = userDetails\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n  const orderListMy = useSelector(state => state.orderListMy)\n  const { loading: loadingOrders, orders, error: errorOrders } = orderListMy\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name) {\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {error && <Message variant='danger'>{error}</Message>}\n        {message && <Message variant='danger'>{message}</Message>}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Name'\n              value={name}\n              onChange={e => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={e => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h3>My Orders</h3>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map(order => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }} />\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }} />\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant='light' className='btn-sm'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfilePage\n","import axios from 'axios'\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_REQUEST,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST\n} from '../constants/orderConstants'\n\nconst createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nconst getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nconst payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nconst deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nconst listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\nconst listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport {\n  createOrder,\n  getOrderDetails,\n  payOrder,\n  listMyOrders,\n  listOrders,\n  deliverOrder\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingPage = ({ history }) => {\n  const cart = useSelector(state => state.cart)\n  const { shippingAddress } = cart\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={e => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={e => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postalCode'\n            value={postalCode}\n            required\n            onChange={e => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={e => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingPage\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Col } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentPage = ({ history }) => {\n  const cart = useSelector(state => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='paymentMethod'>\n          <Form.Label as='legend'>Select Payment Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={e => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Continue to Checkout\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentPage\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderPage = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n\n  //calculate prices\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.taxPrice) +\n    Number(cart.shippingPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    //eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Payment Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items: </h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty!</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price</Col>\n                  <Col>{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  variant='primary'\n                  disabled={cart.cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderPage\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET\n} from '../constants/orderConstants'\n\nconst OrderPage = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { error, loading, order } = orderDetails\n  const orderPay = useSelector(state => state.orderPay)\n  const { success: successPay, loading: loadingPay } = orderPay\n  const orderDeliver = useSelector(state => state.orderDeliver)\n  const { success: successDeliver, loading: loadingDeliver } = orderDeliver\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n    if (!order || order._id !== orderId || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [order, orderId, dispatch, successPay, successDeliver, history, userInfo])\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong>\n              </p>\n              {order.user.name}\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered On {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Payment Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid On {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items: </h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Your order is empty!</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderPage\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\nconst UserListPage = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector(state => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector(state => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo, successDelete])\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map(user => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Form } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditPage = ({ match, history }) => {\n  const userId = match.params.id\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector(state => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [userId, history, dispatch, user, successUpdate])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Name'\n                value={name}\n                onChange={e => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={e => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditPage\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productContstants'\n\nconst ProductListPage = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector(state => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = productDelete\n  const productCreate = useSelector(state => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct\n  } = productCreate\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber\n  ])\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map(product => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListPage\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Form } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productContstants'\n\nconst ProductEditPage = ({ match, history }) => {\n  const productId = match.params.id\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector(state => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [productId, history, dispatch, product, successUpdate])\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n      const { data } = await axios.post('/api/upload', formData, config)\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        category,\n        brand,\n        countInStock,\n        description,\n        image\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Name'\n                value={name}\n                onChange={e => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={e => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={e => setImage(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.File\n              id='image-file'\n              label='Choose File'\n              custom\n              onChange={uploadFileHandler}\n            ></Form.File>\n            {uploading && <Loader />}\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={e => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter count in stock'\n                value={countInStock}\n                onChange={e => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={e => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='Description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditPage\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table, Button } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst OrderListPage = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector(state => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map(order => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>${order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Order Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListPage\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomePage from './Pages/HomePage'\nimport ProductPage from './Pages/ProductPage'\nimport CartPage from './Pages/CartPage'\nimport LoginPage from './Pages/LoginPage'\nimport RegisterPage from './Pages/RegisterPage'\nimport ProfilePage from './Pages/ProfilePage'\nimport ShippingPage from './Pages/ShippingPage'\nimport PaymentPage from './Pages/PaymentPage'\nimport PlaceOrderPage from './Pages/PlaceOrderPage'\nimport OrderPage from './Pages/OrderPage'\nimport UserListPage from './Pages/UserListPage'\nimport UserEditPage from './Pages/UserEditPage'\nimport ProductListPage from './Pages/ProductListPage'\nimport ProductEditPage from './Pages/ProductEditPage'\nimport OrderListPage from './Pages/OrderListPage'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderPage} />\n          <Route path='/shipping' component={ShippingPage} />\n          <Route path='/payment' component={PaymentPage} />\n          <Route path='/placeorder' component={PlaceOrderPage} />\n          <Route path='/login' component={LoginPage} />\n          <Route path='/register' component={RegisterPage} />\n          <Route path='/profile' component={ProfilePage} />\n          <Route path='/product/:id' component={ProductPage} />\n          <Route path='/cart/:id?' component={CartPage} />\n          <Route path='/admin/userlist' component={UserListPage} />\n          <Route path='/admin/user/:id/edit' component={UserEditPage} />\n          <Route path='/admin/productlist' component={ProductListPage} exact />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListPage}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditPage} />\n          <Route path='/admin/orderlist' component={OrderListPage} />\n          <Route path='/search/:keyword' component={HomePage} exact />\n          <Route path='/page/:pageNumber' component={HomePage} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomePage}\n            exact\n          />\n          <Route path='/' component={HomePage} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer\n} from './reducers/userReducers'\nimport {\n  orderCreateReducers,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer\n} from './reducers/orderReducers'\n\nconst rootReducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducers,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: { userInfo: userInfoFromStorage }\n}\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_FAIL\n} from '../constants/productContstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return {\n        loading: true,\n        products: []\n      }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page\n      }\n    case PRODUCT_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        loading: true,\n        ...state\n      }\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        product: action.payload\n      }\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\nexport const productDeleteReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return {\n        loading: true\n      }\n    case PRODUCT_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      }\n    case PRODUCT_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return {\n        loading: true\n      }\n    case PRODUCT_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        product: action.payload\n      }\n    case PRODUCT_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return {\n        loading: true\n      }\n    case PRODUCT_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        product: action.payload,\n        success: true\n      }\n    case PRODUCT_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case PRODUCT_UPDATE_RESET:\n      return {\n        product: {}\n      }\n    default:\n      return state\n  }\n}\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return {\n        loading: true\n      }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return {\n        loading: true,\n        products: []\n      }\n    case PRODUCT_TOP_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload\n      }\n    case PRODUCT_TOP_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n      const existItem = state.cartItems.find(x => x.product === item.product)\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x =>\n            x.product === existItem.product ? item : x\n          )\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LOGOUT,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS\n} from '../constants/orderConstants'\n\nexport const orderCreateReducers = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return { loading: true }\n    case ORDER_CREATE_SUCCESS:\n      return { loading: false, success: true, order: action.payload }\n    case ORDER_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { orderItems: [], shippingAddress: {}, loading: true },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload\n      }\n    case ORDER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return { loading: true }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      }\n    case ORDER_PAY_FAIL:\n      return { loading: false, error: action.payload }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return { loading: true }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      }\n    case ORDER_DELIVER_FAIL:\n      return { loading: false, error: action.payload }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return { loading: true }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload\n      }\n    case ORDER_LIST_MY_FAIL:\n      return { loading: false, error: action.payload }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return { loading: true }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload\n      }\n    case ORDER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}